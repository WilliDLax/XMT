// This file has been autogenerated from a class added in the UI designer.

using System;
using System.Collections.Generic;
using System.Net.Http;
using System.Threading.Tasks;
using Foundation;
using GroupExperiment.Modules;
using GroupExperiment.Modules.Models;
using GroupExperiment.Modules.Utils;
using UIKit;

namespace GroupExperiment
{
	public partial class SummaryController : UIViewController
	{
        public string groupName;
        public string numOfRecipients;
        public double totalAmount;

        string correctPinLength;

        HttpClient client;

        public List<RecipientDTO> recipientDTOList = new List<RecipientDTO>();

		public SummaryController (IntPtr handle) : base (handle)
		{
		}

        public override void ViewDidLoad()
        {
            base.ViewDidLoad();

            Title = "Summary";

            MyUtils.AddShadow(groupSummaryCard);
            MyUtils.AddShadow(senderSummaryCard);
            MyUtils.AddTextFieldShadow(enterPinView);
            MyUtils.AddTextFieldShadow(remarkTextField);
            MyUtils.AddTextFieldShadow(pinTextField);

            groupSummaryCard.Layer.CornerRadius = 8;
            senderSummaryCard.Layer.CornerRadius = 8;
            enterPinView.Layer.CornerRadius = 8;
            //senderSummaryCard.ClipsToBounds = true;

            groupNameLabel.Text = groupName;
            recipientsNumberLabel.Text = numOfRecipients;
            totalAmountLabel.Text = "₦" + totalAmount.ToString("N0");

            accBalanceLabel.Text = "₦" + Commonclass.ActiveAccount.AccountBalance.ToString("N0");
            accNumberLabel.Text = Commonclass.ActiveAccount.AccountNumber;
            accTypeLabel.Text = Commonclass.ActiveAccount.AccountType;

            confirmBtn.TouchUpInside += ConfirmBtn_TouchUpInside;

            okayBtn.TouchUpInside += OkayBtn_TouchUpInside;

            cancelPinBtn.TouchUpInside += CancelPinBtn_TouchUpInside;

            pinTextField.EditingChanged += PinTextField_EditingChanged;
        }

        private void PinTextField_EditingChanged(object sender, EventArgs e)
        {
            if (pinTextField.Text.Length == 4)
            {
                correctPinLength = pinTextField.Text;
            }

            if (pinTextField.Text.Length > 4)
            {
                pinTextField.Text = correctPinLength;
            }
        }

        private void CancelPinBtn_TouchUpInside(object sender, EventArgs e)
        {
            HideViews();
        }

        private void OkayBtn_TouchUpInside(object sender, EventArgs e)
        {
            MakeTransfer().Wait(200);
        }

        private void ConfirmBtn_TouchUpInside(object sender, EventArgs e)
        {
            enterPinBackgroundView.Hidden = false;
            UIView.Transition(enterPinView, 0.8f, UIViewAnimationOptions.TransitionCrossDissolve, () => { enterPinView.Hidden = false; }, null);
        }

        public async Task MakeTransfer()
        {
            client = new HttpClient(MyUtils.GetInsecureHandler());

            string url = "https://localhost:5001/Transaction/make_transfer";
            string url2 = "https://xmtapi.azurewebsites.net/Transaction/make_transfer";

            TransferDTO transfer = new TransferDTO(Commonclass.ActiveAccount.AccountNumber,pinTextField.Text, recipientDTOList.ToArray());

            HttpResponseMessage response = await client.PostAsJsonAsync(url, transfer);
            var responseString = await response.Content.ReadAsStringAsync();

            if (response.IsSuccessStatusCode)
            {
                Console.WriteLine(responseString);
                Commonclass.ActiveAccount.AccountBalance -= totalAmount;

                HideViews();

                PerformSegue("toStatus", null);
            }
            else
            {
                Console.WriteLine("Transfer failed");
                Console.WriteLine(responseString);

                HideViews();
            }

        }

        public void HideViews()
        {
            enterPinBackgroundView.Hidden = true;
            enterPinView.Hidden = true;
            pinTextField.Text = "";
        }
    }




    public class TransferDTO
    {
        public string SenderAccount { get; set; }
        public string AccountPin { get; set; }
        public RecipientDTO[] Transfers { get; set; }

        public TransferDTO(string senderAccount, string accountPin, RecipientDTO[] transfers)
        {
            this.SenderAccount = senderAccount;
            this.AccountPin = accountPin;
            this.Transfers = transfers;
        }
    }
}
